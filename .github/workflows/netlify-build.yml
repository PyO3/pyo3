name: netlify-build

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  guide-build:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.prepare_tag.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: dtolnay/rust-toolchain@nightly

      - name: Use nightly
        run: |
          rustup update nightly
          rustup default nightly

      - name: Setup mdBook
        uses: taiki-e/install-action@v2
        with:
          tool: mdbook, lychee, mdbook-linkcheck

      - name: Prepare tag
        id: prepare_tag
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          echo "::set-output name=tag_name::${TAG_NAME}"

      # Start with the current guides.
      - name: Get the guide
        run: |
          wget -qc https://github.com/PyO3/pyo3/archive/gh-pages.tar.gz -O - | tar -xz
          mv pyo3-gh-pages netlify_build

      # Set redirects.
      - name: Set redirects
        run: |
          source .netlify/redirect.sh

      # This builds the book and docs in netlify_build/main
      - name: Build the guide and public docs
        run: |
          python -m pip install --upgrade pip && pip install nox towncrier
          towncrier build --yes --version Unreleased --date TBC
          nox -s check-guide
          mv target/guide/ netlify_build/main/
          nox -s docs
          mv target/doc netlify_build/main/doc/
          echo "<meta http-equiv=refresh content=0;url=pyo3/>" > netlify_build/main/doc/index.html
          nox -s docs -- nightly internal
          mkdir -p netlify_build/internal
          mv target/doc netlify_build/internal/

      # Upload the built site as an artifact for deploy workflow to consume
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: ./netlify_build
