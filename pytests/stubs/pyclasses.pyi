class AssertingBaseClass:
    def __new__(cls, /, expected_type): ...

class ClassWithDecorators:
    def __new__(cls, /): ...
    @property
    def attr(self, /): ...
    @attr.setter
    def attr(self, /, value): ...
    @classmethod
    @property
    def cls_attribute(cls, /): ...
    @classmethod
    def cls_method(cls, /): ...
    @staticmethod
    def static_method(): ...

class ClassWithoutConstructor: ...

class EmptyClass:
    @classmethod
    @property
    def CLS_ATTRIBUTE(cls, /): ...
    def __len__(self, /): ...
    def __new__(cls, /): ...
    def method(self, /): ...

class PyClassIter:
    def __new__(cls, /): ...
    def __next__(self, /): ...

class PyClassThreadIter:
    def __new__(cls, /): ...
    def __next__(self, /): ...
