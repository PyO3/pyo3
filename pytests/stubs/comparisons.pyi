class Eq:
    def __eq__(self, /, other: Eq) -> bool: ...
    def __ne__(self, /, other: Eq) -> bool: ...
    def __new__(cls, /, value: int) -> None: ...

class EqDefaultNe:
    def __eq__(self, /, other: EqDefaultNe) -> bool: ...
    def __new__(cls, /, value: int) -> None: ...

class EqDerived:
    def __new__(cls, /, value: int) -> None: ...

class Ordered:
    def __eq__(self, /, other: Ordered) -> bool: ...
    def __ge__(self, /, other: Ordered) -> bool: ...
    def __gt__(self, /, other: Ordered) -> bool: ...
    def __le__(self, /, other: Ordered) -> bool: ...
    def __lt__(self, /, other: Ordered) -> bool: ...
    def __ne__(self, /, other: Ordered) -> bool: ...
    def __new__(cls, /, value: int) -> None: ...

class OrderedDefaultNe:
    def __eq__(self, /, other: OrderedDefaultNe) -> bool: ...
    def __ge__(self, /, other: OrderedDefaultNe) -> bool: ...
    def __gt__(self, /, other: OrderedDefaultNe) -> bool: ...
    def __le__(self, /, other: OrderedDefaultNe) -> bool: ...
    def __lt__(self, /, other: OrderedDefaultNe) -> bool: ...
    def __new__(cls, /, value: int) -> None: ...

class OrderedRichCmp:
    def __eq__(self, /, other: OrderedRichCmp) -> bool: ...
    def __ge__(self, /, other: OrderedRichCmp) -> bool: ...
    def __gt__(self, /, other: OrderedRichCmp) -> bool: ...
    def __le__(self, /, other: OrderedRichCmp) -> bool: ...
    def __lt__(self, /, other: OrderedRichCmp) -> bool: ...
    def __ne__(self, /, other: OrderedRichCmp) -> bool: ...
    def __new__(cls, /, value: int) -> None: ...
